@import "./fontawesome/fontawesome.scss";
@import "./fontawesome/brands.scss";
@import "./fontawesome/regular.scss";
@import "./fontawesome/solid.scss";

$color-primary: hsl(228, 100%, 61%);
$color-secondary: hsl(125, 96%, 41%);
$color-danger: hsl(0, 100%, 61%);
$color-warning: hsl(59, 100%, 56%);
$color-info: hsl(303, 100%, 41%);
$color-no-avalable: hsl(0, 0%, 57%);

$colors: (
  primary: $color-primary,
  secondary: $color-secondary,
  danger: $color-danger,
  warning: $color-warning,
  info: $color-info
);

@mixin select-color($propperty: null) {
  @each $name, $color in $colors {
    &-#{$name} {
      @if($propperty =="background") {
        background-color: $color;

        @if($name =="primary" or $name =="info") {
          color: white;
        }
      }

      @else {
        color: $color;
      }
    }
  }
}

@mixin button-styles {
  border: 2px solid #000000;
  border-radius: 0.3rem;
  color: #4c4c4c;
  padding: 1em;
  margin: 1rem 0rem;

  &.btn {
    @include select-color("background");
  }
}

@mixin form-styles {
  &>.form-panel {
    margin: 2rem 1rem;
    border: 0.1em solid #000000;
  }

  .form-control {
    padding: 0.5rem;

    &>input {
      width: 100%;
    }

    .form-img-previsualizer {
      max-width: 10rem;
      max-height: 10rem;
    }
  }
}

$justify-content-options: (
  flex-start,
  flex-end,
  center,
  space-between,
  space-around,
  space-evenly,
  start,
  end,
  left,
  right
);

$flex-direction-options: (
  wrap,
  row,
  row-reverse,
  column,
  column-reverse
);

$align-items-options: (
  stretch: stretch,
  flex-start: flex-start,
  flex-end: flex-end,
  center: center,
  baseline: baseline,
  first-baseline: first baseline,
  last-baseline: last baseline,
  start: start,
  end: end,
  self-start: self-start,
  self-end:self-end
);

/// Replace `$search` with `$replace` in `$string`
/// @author Kitty Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str_slice($string, 1, $index - 1)+$replace +str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/*
  Flex container mixinS
*/
@mixin flex-align-items {
  @each $name, $option in $align-items-options {
    &.#{$name} {
      align-items: $option;
    }
  }
}

@mixin flex-justify-content {
  @each $option in $justify-content-options {
    &.content-#{$option} {
      justify-content: $option;
    }
  }
}

@mixin flex-direction {
  @each $option in $flex-direction-options {
    &.#{$option} {
      flex-direction: $option;
    }
  }
}

/*
  Flex items mixins
*/
@mixin flex-grow {
  @for $i from 1 through 5 {
    &.flex-grow-#{$i} {
      flex-grow: $i;
    }
  }

}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Courier New', Courier, monospace;
}

body {
  background-color: skyblue;
}

button {
  @include button-styles;

  &.btn-link {
    background: none !important;
    border: none;
    padding: 0 !important;
    color: #069;
    text-decoration: underline;
    cursor: pointer;
  }
}

a {
  &.link-button {
    display: inline-block;
    text-decoration: none;
    @include button-styles;
  }
}

div.form,
form {
  @include form-styles;
}

p,
label,
h1,
h2,
h3,
h4,
h5,
h6 {
  &.text {
    @include select-color;

    &-no-avalable {
      color: $color-no-avalable;
    }
  }
}

img {
  &.brand {
    height: auto;
    max-width: 12rem;
    min-width: 8rem;

    &.yape {
      content: url(../../../public/img/yape.png);
    }

    &.credit-card {
      content: url(/public/img/credit-card.png);
    }
  }
}

hr {
  border-top: 3px solid #bbb;
}

.principal {
  padding: 1rem;
}

/*
  Fexbox basics
*/
.container {
  display: flex;

  @include flex-direction;
  @include flex-align-items;
  @include flex-justify-content;

  .item {
    @include flex-grow;
  }
}